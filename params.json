{"name":"jQuery UI TinyTable","tagline":"jQuery UI Table with fixed header, footer and columns","body":"Light weight and fully themeable jQuery UI Plugin to generate tables on\r\nthe fly with fixed columns, header and/or footer.  Simple usage and a\r\nsmall plugin with basic functions like append, prepend or remove one\r\nrow to the table.\r\n\r\n\r\n## API description\r\n\r\n### Create\r\nConvert a normal table into a TinyTable, simple use this command:  \r\n`$('table.selector').tinytbl({ });`\r\n\r\n\r\n#### You can use follow options:\r\n    $('table.selector').tinytbl({\r\n      'body': {\r\n        'useclass': null,\r\n        'autofocus': false\r\n      },\r\n      'cols': {\r\n        'autosize': false,   // Not used yet\r\n        'frozen': 0,\r\n        'moveable': false,   // Not implemented yet\r\n        'resizable': false,  // Not implemented yet\r\n        'sortable': false    // Not implemented yet\r\n      },\r\n      'foot': {\r\n        'useclass': null,\r\n        'atTop': false\r\n      },\r\n      'head': {\r\n        'useclass': null\r\n      },\r\n      'height': 'auto',\r\n      'id': null,\r\n      'resizable': false,     // Not implemented yet\r\n      'rows': {\r\n        'onInsert': null,     // function() {}, but not implemented yet\r\n        'onRemove': null,     // function() {}, but not implemented yet\r\n        'onSelect': null,     // function() {}, only silly test\r\n        'onContext': null,    // function() {}, but not implemented yet\r\n        'multiselect': false\r\n      },\r\n      'rtl': false,\r\n      'useclass': null,\r\n      'width': 'auto'\r\n    });\r\n\r\n\r\n##### Option `body`\r\nThis option is allways true, but you can setup here some specials.\r\n  \r\n- `useclass: 'your-css-body-classname'` to setup an extra CSS classname.  \r\n- `autofocus: false` disables (with `true` enables) the autofocus to the\r\n  scrollable area after the widget was created and/or init.\r\n\r\n\r\n##### Option `cols`\r\nHere you can set the frozen columns for TinyTable.  \r\n\r\n- `autosize: false` disables columns resizing after inserting or deleting\r\n  rows to the body container.  This option is not used at the moment,\r\n  because the insert and delete methods are not implemented.  \r\n- `frozen: 0` set the number of columns to be frozen. `0`, `null` or `false`\r\n  disables frozen columns.  \r\n- `moveable: false` this options is not implemented yet.  Later it would be\r\n  an configuarable object of moveable columns.  To enable this feature, you\r\n  need jQuery UI Draggable/Droppable  \r\n- `resizable: false` this options is not implemented yet.  Later it would be\r\n  an configuarable object of resizable columns.  To enable this feature, you\r\n  need jQuery UI Resizable.  \r\n- `sortable: false` this options is not implemented yet.  Later it would be\r\n  an configuarable object for sorting table data.  \r\n\r\n\r\n##### Option `foot`\r\nThis option is false, if your source table does not include a `<tfoot>`\r\nand/or `<tbody>` html tag.  \r\n  \r\n- `useclass: 'your-css-foot-classname` to setup an extra CSS classname.  \r\n- `atTop: false` is default and will set the foot-container to the bottom\r\n  of TinyTable.  \r\n- `atTop: true` or `atTop: 'after'` sets the foot-container beetween the\r\n  head- and body-container.  \r\n- `atTop: 'before'` the foot-container is the first-container.  \r\n  \r\nIf youd don't want to use a table footer, please set: `foot: false` or\r\n`foot: null`.  \r\n**Notice:**  \r\nIf `foot: false` or `foot: null` the footer of your source table would not\r\nbe available in TinyTable.  \r\n\r\n\r\n##### Option `head`\r\nThis option is false, if your source table does not include a `<thead>`\r\nand/or `<tbody>` html tag.\r\n  \r\n- `useclass: 'your-css-head-classname` to setup an extra CSS classname.  \r\n  \r\nIf you don't want to use a table header, please set: `head: false` or\r\n`head: null`.  \r\n**Notice:**  \r\nIf `head: false` or `head: null` the header of your source table would not\r\nbe available in TinyTable. Column resizing, reorder and data sorting would\r\nbe disabled, if no header is used.\r\n\r\n\r\n##### Options `height` and `width`\r\nThe new version of TinyTable has an intelligent calculation for the correct\r\ndimensions. The deprecated option `renderer` is removed.\r\nYou can use any of the following units to set the dimensions:\r\n`%`, `px`, `em` or `pt`.  \r\nIf you not use an unit, calculation will be done with pixels.\r\n\r\n###### Default or pixels `px`\r\nSet the dimensions to the given values.\r\n\r\n###### Points `pt`\r\nCalculates the dimensions with given points into pixels.  \r\nHere's a small sample:\r\nyou set the width to `886.5pt` and the result is `886.5pt * 1.3 = 1152px`.\r\n\r\n###### Percentage `%`\r\nCalculates the `height` and / or `width` in percentage values of available\r\n`height` and/or `width`.  \r\nA small sample: your table has a container and its width\r\nis `1280px`, you will set the width of TinyTable to `90%` than you get\r\n`1280px/100% * 90% = 1152px`.\r\n\r\n###### Relative with `em`\r\nCalculates the `height` and / or `width` relative to the used font-size. The\r\ndefault factor for this is `16px`.  \r\nHere's a small sample: you set the width to `72em` and the result is `72em/1em * 16px = 1152px`.\r\n\r\n###### Dimensions with `auto`\r\nIf you use `'auto'` for the options `height` and/or `width`, TinyTable would be\r\nresized to maximum available `height` and/or `width`. If TinyTable smaller than\r\nmaximum available `height` and `width` it would be resized to its outersize.\r\n\r\n\r\n##### Option `id`\r\nDefault is `null` and will use an internal id like `tinytbl-XX` where `XX` is a\r\ninternal counter.  \r\nYou can set here your own unique id: `id: 'my-own-unique-tt'`.\r\n\r\n\r\n##### Option `rows`\r\nThis setting is not fully implemented yet.\r\n\r\n###### Function `onInsert()`\r\nCallback function for `$('table.selector').tinytbl('append'|'prepend', [rows])`.  \r\nUsage:  \r\n  `onInsert({object} inserted, {jQuery} normal, [{jQuery} frozen])` \r\n\r\nReturns three params:  \r\n- `{object} rows`, inserted rows  \r\n- `{object} normal`, scrollable columns area  \r\n- `{object} frozen`, frozen columns area\r\n\r\n###### Function `onRemove()`\r\nCallback function for `$('table.selector').tinytbl('remove', rows, [start])`.\r\nUsage:  \r\n  `onRemove({Number} removed, {jQuery} normal, [{jQuery} frozen])`  \r\n  \r\nReturns three params:  \r\n- `{number} removed`, number of removed rows  \r\n- `{object} normal`, scrollable columns area  \r\n- `{object} frozen`, frozen columns area  \r\n\r\n###### Function `onSelect()`\r\nNot implemented yet, refactor for faster init.\r\n\r\n###### Function `onContext()`\r\nNot implemented yet. Would be an right click popup menu later.\r\n\r\n###### `multiselect`\r\nSetup, if row multiselection would available or not.  \r\nDefault is `false`. On `true` it requires the function `rows.onSelect()`\r\nand jQuery UI Selectable.\r\n\r\n\r\n##### Option `rtl`\r\nSet the text direction:  \r\n\r\n- `rtl: false`, text direction is left to right  \r\n- `rtl: true`, text direction is right to left\r\n\r\n\r\n##### Option `useclass`\r\nHere you can set an extra CSS classname for the container of TinyTable.  \r\nDefault value is `null`.\r\n\r\n\r\n\r\n### Destroy\r\n\r\nTo remove TinyTable and restore original table call follow command:  \r\n`$('table.selector').tinytbl('destroy');`\r\n\r\n\r\n\r\nChangelog\r\n---------------------------------------------------------------------------\r\n\r\n#### Version 3.1.2, still under development  \r\n**Complete reprogrammed**  \r\n \r\n- Ready for jQuery 1.10.2 and jQuery UI 1.10.3.  \r\n- Faster implementation, and easier interface  \r\n- Option 'renderer' removed  \r\n- Prepared to support col-resizing, col-moving, col-reorder  \r\n  \r\n- [2014-03-16] Methods:  \r\n  - add new rows at the end of the table body:  \r\n    `$('table.selector').tinytbl('append', [rows])`\r\n  - add new rows at the beginning of table body:  \r\n    `$('table.selector').tinytbl('prepend', [rows])`\r\n  - remove table rows:  \r\n    `$('table.selector').tinytbl('remove', rows, [start])`\r\n  - get the number of rows in table body:  \r\n    `$('table.selector').tinytbl('numrows')`\r\n\r\n\r\n\r\n#### Version 2.1.2beta  \r\n**Support interlock tables**  \r\n[https://github.com/mkkeck/jquery-ui-tinytbl/tree/2.1.2beta](https://github.com/mkkeck/jquery-ui-tinytbl/tree/2.1.2beta)\r\n\r\n\r\n#### Version 2.1.1  \r\n**1st official public release**  \r\n[https://github.com/mkkeck/jquery-ui-tinytbl/tree/2.1.1](https://github.com/mkkeck/jquery-ui-tinytbl/tree/2.1.1)\r\n\r\n\r\n#### Version 1.9.0a, released 2011-10-08  \r\n**1st internal release**  \r\n\r\nNotes\r\n---------------------------------------------------------------------------\r\n\r\n#### Minimum requirements:  \r\n- jQuery 1.9.x  \r\n- jQuery UI Core 1.8.16  \r\n- jQuery UI Widget 1.8.16  \r\n- Dependencies on options:  \r\n  - jQuery UI Resizable  \r\n  - jQuery UI Selectable  \r\n  - jQuery UI Drag/Drop  \r\n\r\n#### Tested browsers:  \r\n- Firefox (> 26)   \r\n- Google Chrome (> 21)  \r\n- Internet Explorer (> 8)  \r\n  \r\n#### Misc:  \r\n- To enable fixed table header the table must have a tbody and a thead.  \r\n- To enable fixed table footer the table must have a tbody and a tfoot.  \r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}